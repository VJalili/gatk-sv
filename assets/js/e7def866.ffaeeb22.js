"use strict";(self.webpackChunkGATK_SV=self.webpackChunkGATK_SV||[]).push([[3416],{4295:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=t(4848),i=t(8453);const r={title:"TrainGCNV",description:"Train gCNV",sidebar_position:3,slug:"gcnv"},o=void 0,l={id:"modules/train_gcnv",title:"TrainGCNV",description:"Train gCNV",source:"@site/docs/modules/train_gcnv.md",sourceDirName:"modules",slug:"/modules/gcnv",permalink:"/gatk-sv/docs/modules/gcnv",draft:!1,unlisted:!1,editUrl:"https://github.com/broadinstitute/gatk-sv/tree/master/website/docs/modules/train_gcnv.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"TrainGCNV",description:"Train gCNV",sidebar_position:3,slug:"gcnv"},sidebar:"tutorialSidebar",previous:{title:"EvidenceQC",permalink:"/gatk-sv/docs/modules/eqc"},next:{title:"GatherBatchEvidence",permalink:"/gatk-sv/docs/modules/gbe"}},a={},c=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Inputs",id:"inputs",level:3},{value:"Outputs",id:"outputs",level:3}];function d(e){const n={h3:"h3",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Trains a gCNV model for use in GatherBatchEvidence.\nThe WDL can be found at /wdl/TrainGCNV.wdl."}),"\n",(0,s.jsx)(n.p,{children:"Both the cohort and single-sample modes use the\nGATK gCNV depth calling pipeline, which requires a\ntrained model as input. The samples used for training\nshould be technically homogeneous and similar to the\nsamples to be processed (i.e. same sample type,\nlibrary prep protocol, sequencer, sequencing center, etc.).\nThe samples to be processed may comprise all or a subset\nof the training set. For small, relatively homogenous cohorts,\na single gCNV model is usually sufficient. If a cohort\ncontains multiple data sources, we recommend training a separate\nmodel for each batch or group of batches with similar dosage\nscore (WGD). The model may be trained on all or a subset of\nthe samples to which it will be applied; a reasonable default\nis 100 randomly-selected samples from the batch (the random\nselection can be done as part of the workflow by specifying\na number of samples to the n_samples_subsample input\nparameter in /wdl/TrainGCNV.wdl)."}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"GatherSampleEvidence"}),"\n",(0,s.jsx)(n.li,{children:"(Recommended) EvidenceQC"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"inputs",children:"Inputs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Read count files (GatherSampleEvidence)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"outputs",children:"Outputs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Contig ploidy model tarball"}),"\n",(0,s.jsx)(n.li,{children:"gCNV model tarballs"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);