"use strict";(self.webpackChunkGATK_SV=self.webpackChunkGATK_SV||[]).push([[6475],{6185:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var t=s(4848),i=s(8453);const l={title:"Building inputs",description:"Building work input json files",sidebar_position:1,slug:"build_inputs"},a=void 0,r={id:"advanced/build_inputs",title:"Building inputs",description:"Building work input json files",source:"@site/docs/advanced/build_inputs.md",sourceDirName:"advanced",slug:"/advanced/build_inputs",permalink:"/gatk-sv/docs/advanced/build_inputs",draft:!1,unlisted:!1,editUrl:"https://github.com/broadinstitute/gatk-sv/tree/master/website/docs/advanced/build_inputs.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Building inputs",description:"Building work input json files",sidebar_position:1,slug:"build_inputs"},sidebar:"tutorialSidebar",previous:{title:"Advanced Guides",permalink:"/gatk-sv/docs/category/advanced-guides"},next:{title:"Development",permalink:"/gatk-sv/docs/category/development"}},o={},d=[{value:"Building inputs for specific use-cases (Advanced)",id:"building-inputs-for-specific-use-cases-advanced",level:2},{value:"Build for batched workflows",id:"build-for-batched-workflows",level:3},{value:"Generating a reference panel",id:"generating-a-reference-panel",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Each workflow of the GATK-SV pipeline takes a unique set of arguments as inputs.\nYou have different options for configuring them depending on the platform you're\nusing to run the pipeline.\nFor instance, you may use Terra workspaces if you're running on Terra (user-friendly),\nor JSON files if you're running on Cromwell (for development and advanced use-cases).\nFor each workflow, we provide example configurations that help both in setting up\nyour own Terra workspace or for testing purposes with sample data.\nYou may run the following commands to get these example inputs."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Clone GATK-SV (you may skip this step if you have already done so)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"git clone https://github.com/broadinstitute/gatk-sv && cd gatk-sv\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create test inputs."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"bash scripts/inputs/build_default_inputs.sh -d .\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Running this command generates test inputs in ",(0,t.jsx)(n.code,{children:"gatk-sv/inputs/build"})," with the following structure."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"inputs/build\n\u251c\u2500\u2500 NA12878\n\u2502\xa0\xa0 \u251c\u2500\u2500 terra\n\u2502\xa0\xa0 \u2514\u2500\u2500 test\n\u251c\u2500\u2500 NA19240\n\u2502\xa0\xa0 \u2514\u2500\u2500 test\n\u251c\u2500\u2500 hgdp\n\u2502\xa0\xa0 \u2514\u2500\u2500 test\n\u2514\u2500\u2500 ref_panel_1kg\n    \u251c\u2500\u2500 terra\n    \u2514\u2500\u2500 test\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"building-inputs-for-specific-use-cases-advanced",children:"Building inputs for specific use-cases (Advanced)"}),"\n",(0,t.jsx)(n.h3,{id:"build-for-batched-workflows",children:"Build for batched workflows"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'python scripts/inputs/build_inputs.py \\\n  inputs/values \\\n  inputs/templates/test/GATKSVPipelineSingleSample \\\n  inputs/build/NA19240/test \\\n  -a \'{ "test_batch" : "ref_panel_1kg" }\'\n'})}),"\n",(0,t.jsx)(n.h3,{id:"generating-a-reference-panel",children:"Generating a reference panel"}),"\n",(0,t.jsxs)(n.p,{children:["This section only applies to the single-sample mode.\nNew reference panels can be generated from a single run of the\n",(0,t.jsx)(n.code,{children:"GATKSVPipelineBatch"})," workflow.\nIf using a Cromwell server, we recommend copying the outputs to a\npermanent location by adding the following option to the\n",(0,t.jsx)(n.a,{href:"https://cromwell.readthedocs.io/en/latest/wf_options/Overview/",children:"workflow configuration"}),"\nfile:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"final_workflow_outputs_dir" : "gs://my-outputs-bucket",\n"use_relative_output_paths": false,\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Here is an example of how to generate workflow input jsons from ",(0,t.jsx)(n.code,{children:"GATKSVPipelineBatch"})," workflow metadata:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Get metadata from Cromwshell."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cromshell -t60 metadata 38c65ca4-2a07-4805-86b6-214696075fef > metadata.json\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Run the script."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"python scripts/inputs/create_test_batch.py \\\n   --execution-bucket gs://my-exec-bucket \\\n   --final-workflow-outputs-dir gs://my-outputs-bucket \\\n   metadata.json \\\n   > inputs/values/my_ref_panel.json\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Build test files for batched workflows (google cloud project id required)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'python scripts/inputs/build_inputs.py \\\n   inputs/values \\\n   inputs/templates/test \\\n   inputs/build/my_ref_panel/test \\\n   -a \'{ "test_batch" : "ref_panel_1kg" }\'\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Build test files for the single-sample workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'python scripts/inputs/build_inputs.py \\\n    inputs/values \\\n    inputs/templates/test/GATKSVPipelineSingleSample \\\n    inputs/build/NA19240/test_my_ref_panel \\\n    -a \'{ "single_sample" : "test_single_sample_NA19240", "ref_panel" : "my_ref_panel" }\'\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Build files for a Terra workspace."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'python scripts/inputs/build_inputs.py \\\n   inputs/values \\\n   inputs/templates/terra_workspaces/single_sample \\\n   inputs/build/NA12878/terra_my_ref_panel \\\n   -a \'{ "single_sample" : "test_single_sample_NA12878", "ref_panel" : "my_ref_panel" }\'\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Note that the inputs to ",(0,t.jsx)(n.code,{children:"GATKSVPipelineBatch"})," may be used as resources\nfor the reference panel and therefore should also be in a permanent location."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(6540);const i={},l=t.createContext(i);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);